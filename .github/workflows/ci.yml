name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm run security:audit
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate

  test:
    name: Test Smart Contracts
    runs-on: ubuntu-latest
    needs: security-audit
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Compile contracts
        run: npm run compile
      
      - name: Run tests
        run: npm test

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate frontend files
        run: |
          echo "Validating frontend files..."
          test -f frontend/index.html
          test -f frontend/superchain-drummer-web3.js
          echo "âœ… Frontend files validated"

  deploy-testnet:
    name: Deploy to Testnets
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: testnet
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup environment
        run: |
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env
          echo "BASESCAN_API_KEY=${{ secrets.BASESCAN_API_KEY }}" >> .env
          echo "INKSCAN_API_KEY=${{ secrets.INKSCAN_API_KEY }}" >> .env
      
      - name: Deploy to OP Sepolia
        run: npm run deploy:op
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      
      - name: Deploy to Base Sepolia
        run: npm run deploy:base
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          BASESCAN_API_KEY: ${{ secrets.BASESCAN_API_KEY }}
      
      - name: Deploy to Ink Sepolia
        run: npm run deploy:ink
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          INKSCAN_API_KEY: ${{ secrets.INKSCAN_API_KEY }}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-testnet
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend
          publish_branch: gh-pages
      
      - name: Deploy to IPFS (optional)
        uses: aquiladev/ipfs-action@v1.0.0
        with:
          path: ./frontend
          key: ${{ secrets.IPFS_KEY }}
          secret: ${{ secrets.IPFS_SECRET }} 